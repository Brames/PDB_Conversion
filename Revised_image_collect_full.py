"""This collects individual protein image data that has previously been generated by 'image_collect.py'"""
#__author__      = "David S. Bramer"
#__copyright__   ="2018"
import numpy as np
import pandas as pd
import sys,os
import glob
from sklearn.preprocessing import MinMaxScaler


fname='/mnt/home/bramerda/Documents/Persistent_Homology/Results/'
prot_names=glob.glob('/mnt/home/bramerda/Documents/Persistent_Homology/Results/*')
prot_names.sort()
prot_names.remove(fname+'1ob4')
prot_names.remove(fname+'1ob7')
prot_names.remove(fname+'2olx')
prot_names.remove(fname+'3md5')
prot_names.remove(fname+'1nko')
prot_names.remove(fname+'2oct')
prot_names.remove(fname+'3fva')

chk=0
counter=0
rf_count=0

key_file='/mnt/home/bramerda/Documents/Persistent_Homology/Image_Key.npy'
if(not(os.path.isfile(key_file))):
  for i in prot_names:
    kname='/mnt/home/bramerda/Documents/Persistent_Homology/Results/'+i[-4:]+'/Image_BF.npy'
    tmp_img_bf=np.load(kname)
    tmp_RF = pd.read_pickle('/mnt/home/bramerda/Documents/Secondary_Prediction/Results/'+i[-4:]+'/Secondary_FRI_b')
    #print(list(tmp_RF))
    tmp_RF=tmp_RF[tmp_RF.Atom_Type=='CA']
    
    tmp_key = np.empty((tmp_img_bf.shape[0]),dtype='a4')
    counter=counter+tmp_img_bf.shape[0]
    rf_count=rf_count+tmp_RF.shape[0]
    tmp_key[:]=i[-4:]
    tmp_key=np.c_[tmp_key,tmp_img_bf]
    if(chk==0):
      Key=tmp_key
    else:
      Key=np.r_[Key,tmp_key]
    chk=1  
   
  np.save('/mnt/home/bramerda/Documents/Persistent_Homology/Image_Key',Key,allow_pickle=True)
else:
  print("key already generated. Loading key...")
  Key=np.load(key_file)
    
DImage_Data = np.empty((Key.shape[0],3,48,3))
GImage_Data = np.empty((Key.shape[0],3,48,3))
print("Starting image collection ...")
k=0    

def normal(tst_arr):
  for i in range(0,3):
    xmin,xmax=tst_arr[:,:,i].min(),tst_arr[:,:,i].max()
    if(xmin!=xmax):
      tst_arr[:,:,i]=(tst_arr[:,:,i]-xmin)/(xmax-xmin)
    else:
      tst_arr[:,:,i]=0
  return tst_arr

scaler=MinMaxScaler()

for i in prot_names:
  Dname='/mnt/home/bramerda/Documents/Persistent_Homology/Results/'+i[-4:]+'/Dif_Im_11.npy'
  Gname='/mnt/home/bramerda/Documents/Persistent_Homology/Results/'+i[-4:]+'/Glo_Im_11.npy'
  Dtmp_img = np.load(Dname)
  Gtmp_img = np.load(Gname)
  print(i[-4:])
  #print(tmp_img.shape)    
  for j in range(0,Dtmp_img.shape[0]):
      #print(Dtmp_img[j,:,:,2])
      DImage_Data[k,:,:,:] = normal(Dtmp_img[j,:,:,:])
      #print(DImage_Data[k,:,:,2])
      GImage_Data[k,:,:,:] = normal(Gtmp_img[j,:,:,:])
      #print(Gtmp_img[j,:,:,:].shape) 
      k = k+1

print(DImage_Data.shape,GImage_Data.shape,Key.shape)  

np.save('/mnt/home/bramerda/Documents/Persistent_Homology/Revised_DifIm_Data',DImage_Data,allow_pickle=True)
np.save('/mnt/home/bramerda/Documents/Persistent_Homology/Revised_GloIm_Data',GImage_Data,allow_pickle=True)


exit()
